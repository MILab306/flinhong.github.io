<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type="text/xml" href="/feed.xslt.xml"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="http://jekyllrb.com" version="3.1.6">Jekyll</generator><link href="https://www.flinhong.com/feed.xml" rel="self" type="application/atom+xml"/><link href="https://www.flinhong.com/" rel="alternate" type="text/html"/><updated>2016-07-18T20:55:05+08:00</updated><id>https://www.flinhong.com/</id><title>Frank Lin</title><subtitle>This blog is an exploration of my quirky thoughts and random adventures through life. I hope you enjoy reading and perusing my posts, please leave me a comment... I&#39;d love to hear from you!</subtitle><author><name>Frank Lin</name></author><entry><title>Bing 必应词典桌面版</title><link href="https://www.flinhong.com/tools/bing-dict-desktop/" rel="alternate" type="text/html" title="Bing 必应词典桌面版"/><published>2016-07-13T00:00:00+08:00</published><updated>2016-07-13T00:00:00+08:00</updated><id>https://www.flinhong.com/tools/bing-dict-desktop</id><content type="html" xml:base="https://www.flinhong.com/tools/bing-dict-desktop/">&lt;p&gt;最近终于把用了多年的老笔记本换下了，用上了 Full HD 的屏幕，但是很多词典应用都没有更新，不能适应屏幕 DPI 变化，当然使用体验很差啦。还好必应词典没有这个问题。&lt;/p&gt; &lt;p&gt;但是 MSN 中文网停止运作后，Bing 词典桌面版的下载页面也不复存在。还好词典官方微博提供临时下载地址，我仅转载一下，方便大家使用。&lt;/p&gt; &lt;p&gt;&lt;a href=&quot;http://dictionary.blob.core.chinacloudapi.cn/app/pc/BingDict_Setup.exe&quot;&gt;Bing 词典桌面版（3.5.1 版）下载地址戳这里！&lt;/a&gt;。&lt;/p&gt; &lt;p&gt;Or，我的备份地址：&lt;a href=&quot;https://mega.nz/#!QUh1QbID!3M4WmipOnK_wkcznss5jD_14VPvxHMJjnQsUM4Kep6M&quot;&gt;mega.nz…&lt;/a&gt;。也不知道这样做合适不😜。&lt;/p&gt; &lt;p&gt;要接收更新，还是建议大家关注必应词典官方微博（&lt;a href=&quot;http://www.weibo.com/msnbingdict&quot;&gt;@必应词典&lt;/a&gt;）。&lt;/p&gt;</content><author><name>Frank Lin</name></author><category term="Tools"/><category term="Bing"/><summary>最近终于把用了多年的老笔记本换下了，用上了 Full HD 的屏幕，但是很多词典应用都没有更新，不能适应屏幕 DPI 变化，当然使用体验很差啦。还好必应词典没有这个问题。</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.flinhong.com/images/201607/bing.png"/></entry><entry><title>Related posts in Jekyll</title><link href="https://www.flinhong.com/front-end/related-posts-in-jekyll/" rel="alternate" type="text/html" title="Related posts in Jekyll"/><published>2016-07-13T00:00:00+08:00</published><updated>2016-07-13T00:00:00+08:00</updated><id>https://www.flinhong.com/front-end/related-posts-in-jekyll</id><content type="html" xml:base="https://www.flinhong.com/front-end/related-posts-in-jekyll/">&lt;p&gt;Jekyll features a simple “Related posts” variable per post page with &lt;code class=&quot;highlighter-rouge&quot;&gt;site.related_posts&lt;/code&gt;, which contains the 10 most recent posts in default. However, it only works perfectly when &lt;code class=&quot;highlighter-rouge&quot;&gt;lsi&lt;/code&gt; (latent semantic indexing) option was enabled.&lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt; &lt;p&gt;As explained in Jekyll documents, with &lt;code class=&quot;highlighter-rouge&quot;&gt;lsi&lt;/code&gt; features will slow down the build process and also not supported by GitHub Pages.&lt;/p&gt; &lt;p&gt;So I find a &lt;a href=&quot;https://anmonteiro.com/2015/08/jekyll-related-posts-revamped/&quot;&gt;post&lt;/a&gt; that solved this issue by using only Liquid tags to generate the related posts with &lt;code class=&quot;highlighter-rouge&quot;&gt;tags&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;categories&lt;/code&gt;. It works by going through the related posts collection and selecting the posts that contain any tags (or categories) in common with the current post, up to a setted limit. If there are enough posts to fill that limit, fine, it stops there. Otherwise, it goes again through the most recent, possibly unrelated posts, and outputs them until the limit is finally reached.&lt;/p&gt; &lt;p&gt;The full snippet is presented below.&lt;sup id=&quot;fnref:2&quot;&gt;&lt;a href=&quot;#fn:2&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt; &lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;{% assign RELATED_POSTS_THRESHOLD = 3 %} &lt;span class=&quot;nt&quot;&gt;&amp;lt;ul&amp;gt;&lt;/span&gt; {% assign related_post_count = 0 %} {% for post in site.related_posts %} {% if related_post_count == RELATED_POSTS_THRESHOLD %} {% break %} {% endif %} {% for tag in post.tags %} {% if page.tags contains tag %} &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;h3&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;{{ site.url }}{{ post.url }}&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt; {{ post.title }} &lt;span class=&quot;nt&quot;&gt;&amp;lt;small&amp;gt;&lt;/span&gt;{{ post.date | date_to_string }}&lt;span class=&quot;nt&quot;&gt;&amp;lt;/small&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;/h3&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt; {% assign related_post_count = related_post_count | plus: 1 %} {% break %} {% endif %} {% endfor %} {% endfor %} {% assign posts_left = RELATED_POSTS_THRESHOLD | minus: related_post_count %} {% unless posts_left == 0 %} {% for post in site.related_posts %} {% if posts_left == 0 %} {% break %} {% endif %} {% assign already_related = false %} {% for tag in post.tags %} {% if page.tags contains tag %} {% assign already_related = true %} {% break %} {% endif %} {% endfor %} {% unless already_related %} {% assign posts_left = posts_left | minus: 1 %} &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;h3&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;{{ site.url }}{{ post.url }}&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt; {{ post.title }} &lt;span class=&quot;nt&quot;&gt;&amp;lt;small&amp;gt;&lt;/span&gt;{{ post.date | date_to_string }}&lt;span class=&quot;nt&quot;&gt;&amp;lt;/small&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;/h3&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt; {% endunless %} {% endfor %} {% endunless %} &lt;span class=&quot;nt&quot;&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;p&gt;You can also change the &lt;code class=&quot;highlighter-rouge&quot;&gt;site.related_posts&lt;/code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;site.posts&lt;/code&gt; if you want more posts beyond the ten recent posts.&lt;/p&gt; &lt;p&gt;Refs:&lt;/p&gt; &lt;div class=&quot;footnotes&quot;&gt; &lt;ol&gt; &lt;li id=&quot;fn:1&quot;&gt; &lt;p&gt;&lt;a href=&quot;https://jekyllrb.com/docs/variables/&quot;&gt;Variables - Jekll&lt;/a&gt; &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li id=&quot;fn:2&quot;&gt; &lt;p&gt;&lt;a href=&quot;https://anmonteiro.com/2015/08/jekyll-related-posts-revamped/&quot;&gt;Jekyll related posts revamped&lt;/a&gt; &lt;a href=&quot;#fnref:2&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;/ol&gt; &lt;/div&gt;</content><author><name>Frank Lin</name></author><category term="Front-end"/><category term="Jekyll"/><summary>Jekyll features a simple “Related posts” variable per post page with site.related_posts, which contains the 10 most recent posts in default. However, it only works perfectly when lsi (latent semantic indexing) option was enabled.1 Variables - Jekll &amp;#8617;</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.flinhong.com/images/201607/related.jpg"/></entry><entry><title>Better quality of Google Analytics data for Jekyll blogs</title><link href="https://www.flinhong.com/front-end/better-google-analytics-for-jekyll/" rel="alternate" type="text/html" title="Better quality of Google Analytics data for Jekyll blogs"/><published>2016-07-13T00:00:00+08:00</published><updated>2016-07-13T00:00:00+08:00</updated><id>https://www.flinhong.com/front-end/better-google-analytics-for-jekyll</id><content type="html" xml:base="https://www.flinhong.com/front-end/better-google-analytics-for-jekyll/">&lt;p&gt;The default Google Analytics extract the page information from &lt;code class=&quot;highlighter-rouge&quot;&gt;windows.location&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;document.title&lt;/code&gt; by using its default code snippets. This works fine if the page is loaded directly from its origin file without any modification. However, for some cases, the visitor to the blog post may load the page from Google’s cache or use a service such as Google Translate that no longer contains the orginal URL or the title might be modified. As a result, this particular type of page view is still recorded.&lt;/p&gt; &lt;p&gt;The solution for this problem is to pass the page information when sending the page view event. Of course, for this to work these values must appear as constants in the JS scripts returned by the site. With Liquid used by Jekyll, this is easy to achieve because the location and title are available from the YAML such as &lt;code class=&quot;highlighter-rouge&quot;&gt;page.url&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;page.title&lt;/code&gt;.&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;ga&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;send&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;pageview&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;page&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;{{ page.url }}&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;title&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;{{ page.title | replace: &quot;&#39;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;, &quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;&quot; }}&#39;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;p&gt;In the generated page these options will indeed appear as constants and they will be sent unmodified to Analytics, even if the page is loaded from Google’s cache or modified by Google Translate:&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;ga&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;send&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;pageview&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;page&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;/front-end/better-google-analytics-for-jekyll/&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;title&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;Better quality of Google Analytics data for Jekyll blogs&#39;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt; &lt;/div&gt;</content><author><name>Frank Lin</name></author><category term="Front-end"/><category term="Jekyll"/><category term="Google Analytics"/><summary>The default Google Analytics extract the page information from windows.location and document.title by using its default code snippets. This works fine if the page is loaded directly from its origin file without any modification. However, for some cases, the visitor to the blog post may load the page from Google’s cache or use a service such as Google Translate that no longer contains the orginal URL or the title might be modified. As a result, this particular type of page view is still recorded.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.flinhong.com/images/201607/ga.png"/></entry><entry><title>American Society for Microbiology (ASM) no longer supports impact factors for its journals</title><link href="https://www.flinhong.com/tech/no-longer-if-support-for-asm/" rel="alternate" type="text/html" title="American Society for Microbiology (ASM) no longer supports impact factors for its journals"/><published>2016-07-12T00:00:00+08:00</published><updated>2016-07-12T00:00:00+08:00</updated><id>https://www.flinhong.com/tech/no-longer-if-support-for-asm</id><content type="html" xml:base="https://www.flinhong.com/tech/no-longer-if-support-for-asm/">&lt;p&gt;As the announcement posted on &lt;strong&gt;July 11, 2016&lt;/strong&gt;, American Society for Microbiology (ASM) no longer supports impact factors for its journals:&lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt; &lt;p&gt;Washington, DC – July 11, 2016 - The editors-in-chief of ASM journals and ASM leadership have decided to no longer advertise the impact factors of ASM journals on the journals’ websites. This decision was made in order to avoid contributing to a distorted value system that inappropriately emphasizes high IFs. High-IF journals limit the number of accepted articles to create a perception of exclusivity, and individuals receive disproportionate rewards for articles in high IF journals, while science as a whole suffers from a distorted values system and delayed communication of research.&lt;/p&gt; &lt;p&gt;It is the hope of ASM journal editors-in-chief and ASM leadership to move away from this system and the undue focus on journal IF, which detracts from the advancement of scientific research, by removing IFs from ASM journal websites. In doing so, ASM hopes to make a statement of principle that other journals will follow.&lt;/p&gt; &lt;p&gt;Calculated by various companies and promoted by publishers, journal impact factors (JIFs) are a measure of the average number of citations that a journal’s articles receive over the past two years. They were designed to indicate the quality of journals, but researchers often use the metric to assess the quality of individual papers — and even, in some cases, their authors.&lt;sup id=&quot;fnref:2&quot;&gt;&lt;a href=&quot;#fn:2&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt; &lt;div class=&quot;clear-float do-the-split&quot;&gt;&lt;/div&gt; &lt;p&gt;“To me, what’s essential is to purge the conversation of the impact factor,” says ASM chief executive Stefano Bertuzzi, a prominent critic of the metric. “We want to make it so tacky that people will be embarrassed just to mention it.”&lt;/p&gt; &lt;p&gt;Refs:&lt;/p&gt; &lt;div class=&quot;footnotes&quot;&gt; &lt;ol&gt; &lt;li id=&quot;fn:1&quot;&gt; &lt;p&gt;&lt;a href=&quot;https://www.asm.org/index.php/asm-newsroom2/press-releases/94299-asm-media-advisory-asm-no-longer-supports-impact-factors-for-its-journals&quot;&gt;ASM Media Advisory: ASM No Longer Supports Impact Factors for its Journals&lt;/a&gt; &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li id=&quot;fn:2&quot;&gt; &lt;p&gt;&lt;a href=&quot;http://www.nature.com/news/beat-it-impact-factor-publishing-elite-turns-against-controversial-metric-1.20224&quot;&gt;Beat it, impact factor! Publishing elite turns against controversial metric&lt;/a&gt; &lt;a href=&quot;#fnref:2&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;/ol&gt; &lt;/div&gt;</content><author><name>Frank Lin</name></author><category term="Tech"/><category term="Impact Factors"/><summary>As the announcement posted on July 11, 2016, American Society for Microbiology (ASM) no longer supports impact factors for its journals:1 ASM Media Advisory: ASM No Longer Supports Impact Factors for its Journals &amp;#8617;</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.flinhong.com/images/201607/impact_factor.jpg"/></entry><entry><title>为了忘却的纪念 - 七堇年</title><link href="https://www.flinhong.com/reading/to-forget-to-memory/" rel="alternate" type="text/html" title="为了忘却的纪念 - 七堇年"/><published>2016-07-07T00:00:00+08:00</published><updated>2016-07-07T00:00:00+08:00</updated><id>https://www.flinhong.com/reading/to-forget-to-memory</id><content type="html" xml:base="https://www.flinhong.com/reading/to-forget-to-memory/">&lt;p&gt;不过是为了心头的虚妄去找来阅读的一篇文章，为了忘却一段时光，也为了纪念这个成长，还有些许是慰藉自找的伤。一开始阅读鲁迅先生的《为了忘却的纪念》，于己不合，才另寻了七堇年的这篇，同为《为了忘却的纪念》，才觉得自己也有那样的旧时光，也有那样的热泪盈眶。&lt;/p&gt; &lt;div class=&quot;breaking-line&quot;&gt;&lt;/div&gt; &lt;p&gt;&lt;strong&gt;七堇年 - 为了忘却的纪念&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;回首那些错把倾诉冲动当作创作才华的无知年生，在兵荒马乱的晚自习上，在熄灯的宿舍里，我们总是在一堆堆耀武扬威的习题和试卷的缝隙间，在应急灯渐渐微弱下去的光线中，一手撑着深不可测的夜，一手写下无处倾诉的话。&lt;/p&gt; &lt;p&gt;那是一种盲目的、消耗的状态，照管自己的生活，打理那些千头万绪的杂念，喝自己冲的咖啡，睡自己铺好的被窝，吃自己餐盘里的饭菜，写自己的作业，考自己的试，做自己的梦……世界的悲伤与灾难都太多，我们活在平静遥远的角落，无力怜悯。人间既非天堂又非地狱，末日尚远，我们惟能维护着自己的天地，“埋头做着功课做着世间的荣辱”……就算是洪荒滔天，也总有他人去担当……文字成为内心的形而上的依靠。&lt;/p&gt; &lt;p&gt;那些执念，那样的旧时光，一晃就过去了。&lt;/p&gt; &lt;p&gt;而今仿佛是站在一个青黄不接的尴尬路口，失去的是招摇撞骗的痛快诉说，未曾获得的，是笔走天涯的洗练淡定。已经再也不能随心所欲地写字，因为心里有了羞赧和踌躇，对纷繁复杂的眼之所见有了惧怕。不知道我应该怎样写，写这无法书写的自我，怎样诉说，诉说这无法诉说的世界。&lt;/p&gt; &lt;p&gt;回过头去看看那些浸透在白纸黑字上的生动的悲喜，切肤地感觉到，在那样一个唯唯诺诺的苟且年纪，伤情似乎是装点生命的勋章，好像只有凭借那些，幻觉般的，被我们脆弱的主观承受力无限夸大的非难，我们才得以拥有热泪盈眶的青春。&lt;/p&gt; &lt;p&gt;尽管，生命中的温暖一直都与我们遥遥在望，而我们只不过是拒绝路过。&lt;/p&gt; &lt;p&gt;“之行，如果有天我们湮没在人潮中，庸碌一生，那是因为我们没有努力活得丰盛。”二十岁的时候，读到这样的句子。写这话的人又说，“世界之大，我却不知其折或远。”&lt;/p&gt; &lt;p&gt;在我脚踏的这片狭小天地，经历的，不过是寻常的青春，看到的，不过是平凡的世界。在过去心高气傲的年头上，因不懂得该如何聪明地活着，所以总觉得连生命都是身外之物，“好像这个世界说不要就不要了。”&lt;/p&gt; &lt;p&gt;前些日子在英文泛读课上看了一篇美国作家写的散文，他说：“杰斐逊总统在独立宣言里告诉我们，‘每个人都有追求幸福的权利’，但很多人把这句话误读成‘每个人都有幸福的权利’。”&lt;/p&gt; &lt;p&gt;读到这里，我为这样一个美国式的小聪明笑了起来。这篇散文不过讲述了一个古老的真理，即幸福本身就是虚妄，它只存在于追求幸福的过程中。在所谓的终点你是看不到幸福的，因为它不存在。&lt;/p&gt; &lt;p&gt;我因此想起了曾经不知天高地厚的年岁，因为一些小事踌躇满志，连走路的步伐都快了起来，仿佛急于直面人生；但是当鞋里掺进了一颗硌脚的石子儿，便又会呼天抢地，倒戈弃甲，觉得世不容我。但是终于——在其后的其后——我渐渐承认，活着的价值，在于要有一个饱满的人生。隐忍平凡的外壳下，要像果实般有着汁甜水蜜的肉瓤，以及一颗坚硬闪亮的内核。这样的种子，才能在人间深处生根发芽，把一段富有情致的人生传奇流传下去。&lt;/p&gt; &lt;p&gt;因知道若干年之后的人世，再也不会有人惦记我们的存在，因此这段饱满的生命，是我们以生之为人而骄傲的唯一见证。&lt;/p&gt; &lt;p&gt;这些年的时间，为着实现这样饱满的人生，断断续续地做着一些代价高昂的遥远的梦，断断续续地写些不叫文字的文字，断断续续地被生活的遗憾所打岔，跌入低谷，并且拒绝任何搭救，自己慢慢摸索着爬起来继续走。这青春，与世间任何一段青春无异——年月里那些朝生暮死的悲喜，也就这样野花般自生自灭地燃烧在茫茫命途上，装点了路人的梦。&lt;/p&gt; &lt;p&gt;故人对我说，“要有最朴素的生活，与最遥远的梦想”……说这话的少年，早都成了记忆深处的那些花儿，走上了更远、更美的路。只是这样的话，我一直都唯唯诺诺地记得。我也是这样感激涕零地知晓，我何其所幸——“如果不是因了你们，我何以能这样平安成长，渐渐变成一个健全的人呢。”&lt;/p&gt; &lt;p&gt;记录这旅途的大部分文字，从高一到高三毕业，用了整个成长的时间来完成它。&lt;/p&gt; &lt;p&gt;印象深刻的，永远是书写它们的时候——某个十六岁的晴朗的秋天下午，某个心绪不平的高三的晚自习，某个毕业之后的夏天的深夜——而经过了这一切，我常常不解的是，为何我们而今常常惭愧当年的种种矫情，但却又暗地里明白，当初身临其境的时候，我们的体会的确是真实而切肤的。于是这只能归结为这样一个冷静的解释，那是因为我们长大了。那是因为，好多年前如锥子一般刻在我们心底的，所谓时光断裂的声音，成为了永远的回声。&lt;/p&gt; &lt;p&gt;年华里，我们失却的是一种心情。&lt;/p&gt; &lt;p&gt;未曾想到，在这样的一个过程中，我们的出生年代，成为了一个字正腔圆的集体烙印，被用作追捧和诟病的代名词，无论我们有着多么迥然不同的生存姿态。但是我仍然相信这些千姿百态的理想和悲哀，功名和败落的后面，有着本质上相同的，对世界和生命的勇敢诘问。这正是我们为何要紧紧抓住语言的权利去表达内心的最初的动机。无论是写作者还是阅读者，这都是光荣的事情。至少，我们有很多的孩子，愿意去思考和表达，即使无论这思考和表达的方式与内容怎样。我始终相信这是另一种意义上的殊途同归。&lt;/p&gt; &lt;p&gt;所以。&lt;/p&gt; &lt;p&gt;因了成长本身的不完美，我希望这些如原石一般尚经不起雕琢的文字，能够以一种最接近成长的本质的真实形式——即充满了热泪、过错、遗憾、美好、希望和绝望的姿态——纪念我业已逝去的那段珍贵岁月。那些我们等待着下课、等待着放学、等待着长大的少年时代。那曾是，也将是属于我们大多数孩子的一段最清澈最美好的时光，如同所有，所有——所有踏过了中学岁月，踏过了高考，踏过了命运的沼泽，在险些陷下去的时刻，被意志和希望重新拉回到一条更值得坚持下去的路上的孩子们——所亲身经历过的那样。&lt;/p&gt; &lt;p&gt;看，在这个充满爱与被爱、伤害与被伤害的世界里，生命对我们是吝啬的，因为它总是让我们失望；可是，生命又是这么慷慨，总会在失望之后给予我们拯救。&lt;/p&gt; &lt;p&gt;我想，因了这生命的慷慨，我们必须尊严地过下去。就如同生命本身，尊重我们的存在。&lt;/p&gt; &lt;p&gt;之所以将本文集的名字命名为“被窝是青春的坟墓”，是因为这个名字对于我而言的重大意义。我非常怀念它。&lt;/p&gt; &lt;p&gt;这是一句暗号。我们那些彼时笑容灿烂，而今四散天涯的孩子们，永远都会记得它。借这样一个温暖的名字，我只愿如此诚恳地，表达我对所有正在成长中的孩子们的祝福，就像我一直被祝福的那样……&lt;/p&gt; &lt;p&gt;要有最朴素的生活，与最遥远的梦想。&lt;/p&gt; &lt;p&gt;即使明日天寒地冻，路远马亡。&lt;/p&gt; &lt;div class=&quot;breaking-line&quot;&gt;&lt;/div&gt; &lt;p&gt;最后，放首歌在这里，我不知道合适不，但我愿意听。&lt;/p&gt; &lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/wTTmIE8Evqo&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;</content><author><name>Frank Lin</name></author><category term="Reading"/><category term="reading"/><summary>不过是为了心头的虚妄去找来阅读的一篇文章，为了忘却一段时光，也为了纪念这个成长，还有些许是慰藉自找的伤。一开始阅读鲁迅先生的《为了忘却的纪念》，于己不合，才另寻了七堇年的这篇，同为《为了忘却的纪念》，才觉得自己也有那样的旧时光，也有那样的热泪盈眶。</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.flinhong.com/images/201607/post-mem.jpg"/></entry><entry><title>Fix Time Difference Between Dual Boot Windows and Ubuntu</title><link href="https://www.flinhong.com/tips/fix-time-difference-bwtween-windows-and-ubuntu/" rel="alternate" type="text/html" title="Fix Time Difference Between Dual Boot Windows and Ubuntu"/><published>2016-07-06T00:00:00+08:00</published><updated>2016-07-06T00:00:00+08:00</updated><id>https://www.flinhong.com/tips/fix-time-difference-bwtween-windows-and-ubuntu</id><content type="html" xml:base="https://www.flinhong.com/tips/fix-time-difference-bwtween-windows-and-ubuntu/">&lt;p&gt;This post is a quick tip for users who dual boot Ubuntu and Windows: if the time is off on your computer when you reboot and switch between Ubuntu and Windows, here’s how to fix it.&lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt; &lt;p&gt;If you dual boot and there are time conflicts between Windows and Ubuntu, this occurs because Ubuntu store the time on the hardware clock as UTC by default while Microsoft Windows stores the time as local time, thus causing conflicting times between Ubuntu and Windows. The fix is pretty easy and it can be applied from both Ubuntu and Windows.&lt;/p&gt; &lt;h2 id=&quot;headid-fix-time-differences-between-ubuntu-and-windows&quot;&gt;Fix time differences between Ubuntu and Windows&lt;/h2&gt; &lt;p&gt;A. &lt;strong&gt;To fix the UTC / local time difference between Ubuntu and Windows from Ubuntu&lt;/strong&gt; by making Ubuntu use local time.&lt;/p&gt; &lt;p&gt;Before proceeding, note that according to the Ubuntu wiki, “the advantage of having the hardware clock as UTC is that you don’t need to change the hardware clock when moving between timezones or when Daylight Savings Time (DST) begins or ends as UTC does not have DST or timezone offsets”. So this is not recommended and if you can, you should use method B., and fix this from Windows.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;For Ubuntu 16.04 and newer&lt;/strong&gt;, run the following command:&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;timedatectl &lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt;-local-rtc 1 &lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;p&gt;You can then check if Ubuntu uses local time, you can then use the following command:&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;timedatectl &lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;p&gt;Which should display the following “RTC in local TZ: yes”. A warning will also be displayed. Here’s the full command output:&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;timedatectl Local &lt;span class=&quot;nb&quot;&gt;time&lt;/span&gt;: Lu 2016-07-06 12:18:22 EEST Universal &lt;span class=&quot;nb&quot;&gt;time&lt;/span&gt;: Lu 2016-07-06 09:18:22 UTC RTC &lt;span class=&quot;nb&quot;&gt;time&lt;/span&gt;: Lu 2016-07-06 12:18:22 Time zone: Europe/Bucharest &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;EEST, +0300&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; Network &lt;span class=&quot;nb&quot;&gt;time &lt;/span&gt;on: yes NTP synchronized: no RTC &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;local &lt;/span&gt;TZ: yes Warning: The system is configured to &lt;span class=&quot;nb&quot;&gt;read &lt;/span&gt;the RTC &lt;span class=&quot;nb&quot;&gt;time &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;the &lt;span class=&quot;nb&quot;&gt;local time &lt;/span&gt;zone. This mode can not be fully supported. It will create various problems with &lt;span class=&quot;nb&quot;&gt;time &lt;/span&gt;zone changes and daylight saving &lt;span class=&quot;nb&quot;&gt;time &lt;/span&gt;adjustments. The RTC &lt;span class=&quot;nb&quot;&gt;time &lt;/span&gt;is never updated, it relies on external facilities to maintain it. If at all possible, use RTC &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;UTC by calling &lt;span class=&quot;s1&quot;&gt;&#39;timedatectl set-local-rtc 0&#39;&lt;/span&gt;. &lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;p&gt;&lt;strong&gt;For Ubuntu versions older than 16.04&lt;/strong&gt;: you must edit the /etc/default/rcS file and replace “UTC=yes” with “UTC=no” (both without the quotes). To do this automatically, simply copy/paste the following command in a terminal:&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;sudo sed -i &lt;span class=&quot;s1&quot;&gt;&#39;s/UTC=yes/UTC=no/&#39;&lt;/span&gt; /etc/default/rcS &lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;p&gt;And then reboot.&lt;/p&gt; &lt;p&gt;B. &lt;strong&gt;To fix this from Windows&lt;/strong&gt; (it should work with Vista SP2, Windows 7, Server 2008 R2 and Windows 8/8.1), by making it use UTC instead of local time, download &lt;a href=&quot;/assets/WindowsTimeFixUTC.reg&quot;&gt;THIS&lt;/a&gt; Windows registry file and simply double click it.&lt;sup id=&quot;fnref:2&quot;&gt;&lt;a href=&quot;#fn:2&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt; &lt;p&gt;Then, to disable the Windows Time service (which still writes local time to RTC regardless of the registry setting above, on shutdown), run Command Prompt as Administrator and paste this command:&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;sc config w32time &lt;span class=&quot;nv&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; disabled &lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;p&gt;And reboot.&lt;/p&gt; &lt;h2 id=&quot;headid-how-to-revert-the-changes&quot;&gt;How to revert the changes&lt;/h2&gt; &lt;p&gt;A. &lt;strong&gt;From Ubuntu&lt;/strong&gt;: reverting this change from Ubuntu is pretty easy.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Ubuntu 16.04 and newer&lt;/strong&gt;: to revert the changes, simply run the following command:&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;timedatectl &lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt;-local-rtc 0 &lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;p&gt;&lt;strong&gt;Ubuntu versions older than 16.04&lt;/strong&gt;: all you have to do is replace “UTC=no” with “UTC=yes” in the /etc/default/rcS file. To do this automatically, copy/paste the command below in a terminal:&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo sed -i &lt;span class=&quot;s1&quot;&gt;&#39;s/UTC=no/UTC=yes/&#39;&lt;/span&gt; /etc/default/rcS &lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;p&gt;And then reboot your computer.&lt;/p&gt; &lt;p&gt;B. &lt;strong&gt;From Windows&lt;/strong&gt;: reverting this change is a bit more complicated from Windows.&lt;/p&gt; &lt;p&gt;Firstly, open the &lt;code class=&quot;highlighter-rouge&quot;&gt;.reg&lt;/code&gt; file downloaded when applying the fix for Windows (see download link above) with a text editor and change the “RealTimeIsUniversal” value from “dword:00000001” to “-“ (without the quotes). Here’s how the file should look like after making this change:&lt;/p&gt; &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Windows Registry Editor Version 5.00 [HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\TimeZoneInformation] &quot;RealTimeIsUniversal&quot;=- &lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;p&gt;Then save the file and double click it.&lt;/p&gt; &lt;p&gt;Next, run the following command in Command Prompt (which you need to run as Administrator) to re-enable the Windows Time service:&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;sc config w32time &lt;span class=&quot;nv&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; demand &lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;p&gt;And finally, reboot.&lt;/p&gt; &lt;p&gt;Refs:&lt;/p&gt; &lt;div class=&quot;footnotes&quot;&gt; &lt;ol&gt; &lt;li id=&quot;fn:1&quot;&gt; &lt;p&gt;&lt;a href=&quot;http://www.webupd8.org/2014/09/dual-boot-fix-time-differences-between.html&quot;&gt;DUAL BOOT: FIX TIME DIFFERENCES BETWEEN UBUNTU AND WINDOWS&lt;/a&gt; &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li id=&quot;fn:2&quot;&gt; &lt;p&gt;&lt;a href=&quot;https://help.ubuntu.com/community/UbuntuTime#Multiple_Boot_Systems_Time_Conflicts&quot;&gt;Multiple Boot Systems Time Conflicts&lt;/a&gt; &lt;a href=&quot;#fnref:2&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;/ol&gt; &lt;/div&gt;</content><author><name>Frank Lin</name></author><category term="Tips"/><category term="Windows"/><category term="Ubuntu"/><summary>This post is a quick tip for users who dual boot Ubuntu and Windows: if the time is off on your computer when you reboot and switch between Ubuntu and Windows, here’s how to fix it.1 DUAL BOOT: FIX TIME DIFFERENCES BETWEEN UBUNTU AND WINDOWS &amp;#8617;</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.flinhong.com/images/201607/dual-boot.jpg"/></entry><entry><title>Free SSL with Let’s Encrypt on GitLab Pages</title><link href="https://www.flinhong.com/front-end/lets-encrypt-with-gitlab-pages/" rel="alternate" type="text/html" title="Free SSL with Let&#39;s Encrypt on GitLab Pages"/><published>2016-07-06T00:00:00+08:00</published><updated>2016-07-06T00:00:00+08:00</updated><id>https://www.flinhong.com/front-end/lets-encrypt-with-gitlab-pages</id><content type="html" xml:base="https://www.flinhong.com/front-end/lets-encrypt-with-gitlab-pages/">&lt;p&gt;In this post we will talk about HTTPS and how to add it to your GitLab Pages site with &lt;a href=&quot;https://letsencrypt.org/&quot;&gt;Let’s Encrypt&lt;/a&gt;. And you can find the original post at &lt;a href=&quot;https://about.gitlab.com/2016/04/11/tutorial-securing-your-gitlab-pages-with-tls-and-letsencrypt/&quot;&gt;Tutorial: Securing your GitLab Pages with TLS and Let’s Encrypt&lt;/a&gt;. Here, I add my own exprience when following its guidance.&lt;/p&gt; &lt;h2 id=&quot;headid-why-tlsssl&quot;&gt;Why TLS/SSL?&lt;/h2&gt; &lt;p&gt;When discussing HTTPS, it’s common to hear people saying that a static website doesn’t need HTTPS, since it doesn’t receive any POST requests, or isn’t handling credit card transactions or any other secure request. But that’s not the whole story.&lt;/p&gt; &lt;p&gt;TLS (&lt;a href=&quot;https://en.wikipedia.org/wiki/Transport_Layer_Security#TLS_1.0&quot;&gt;formerly SSL&lt;/a&gt;) is a security protocol that can be added to HTTP to increase the security of your website by:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;properly authenticating yourself: the client can trust that you are really you. The TLS handshake that is made at the beginning of the connection ensures the client that no one is trying to impersonate you;&lt;/li&gt; &lt;li&gt;data integrity: this ensures that no one has tampered with the data in a request/response cycle;&lt;/li&gt; &lt;li&gt;encryption: this is the main selling point of TLS, but the other two are just as important. This protects the privacy of the communication between client and server.&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;The TLS layer can be added to other protocols too, such as FTP (making it &lt;a href=&quot;https://en.wikipedia.org/wiki/FTPS&quot;&gt;FTPS&lt;/a&gt;) or WebSockets (making &lt;code class=&quot;highlighter-rouge&quot;&gt;ws://&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;wss://&lt;/code&gt;).&lt;/p&gt; &lt;h2 id=&quot;headid-https-everywhere&quot;&gt;HTTPS Everywhere&lt;/h2&gt; &lt;p&gt;Nowadays, there is a strong push for using TLS on every website. The ultimate goal is to make the web safer, by adding those three components cited above to every website.&lt;/p&gt; &lt;p&gt;The first big player was the &lt;a href=&quot;https://www.eff.org/https-everywhere&quot;&gt;HTTPS Everywhere&lt;/a&gt; browser extension. Google has also been using HTTPS compliance to better rank websites since &lt;a href=&quot;https://webmasters.googleblog.com/2014/08/https-as-ranking-signal.html&quot;&gt;2014&lt;/a&gt;.&lt;/p&gt; &lt;h2 id=&quot;headid-tls-certificates&quot;&gt;TLS certificates&lt;/h2&gt; &lt;p&gt;In order to add TLS to HTTP, one would need to get a certificate, and until 2015, one would need to either pay for it or figure out how to do it with one of the available &lt;a href=&quot;https://en.wikipedia.org/wiki/Certificate_authority&quot;&gt;Certificate Authorities&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Enter &lt;a href=&quot;https://letsencrypt.org/&quot;&gt;Let’s Encrypt&lt;/a&gt;, a free, automated, and open Certificate Authority. &lt;a href=&quot;https://letsencrypt.org/2015/12/03/entering-public-beta.html&quot;&gt;Since December 2015&lt;/a&gt; anyone can get a free certificate from this new Certificate Authority from the comfort of their terminal.&lt;/p&gt; &lt;h2 id=&quot;headid-implementation&quot;&gt;Implementation&lt;/h2&gt; &lt;p&gt;So, let’s suppose we’re going to create a static blog with &lt;a href=&quot;https://jekyllrb.com/&quot;&gt;Jekyll 3&lt;/a&gt;. If you are not creating a blog or are not using Jekyll just follow along, it should be straightforward enough to translate the steps for different purposes.&lt;/p&gt; &lt;p&gt;A simple example blog can be created with:&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;jekyll new cool-blog New jekyll site installed &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; ~/cool-blog. &lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;cool-blog/ &lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;p&gt;Now you have to create a GitLab project. Here we are going to create a “user page”, which means that it is a project created within a user account (not a group account), and that the name of the project looks like &lt;code class=&quot;highlighter-rouge&quot;&gt;YOURUSERNAME.gitlab.io&lt;/code&gt;. Refer to the &lt;a href=&quot;http://doc.gitlab.com/ee/pages/README.html#getting-started-with-gitlab-pages&quot;&gt;“Getting started” section of the GitLab Pages manual&lt;/a&gt; for more information on that.&lt;/p&gt; &lt;p&gt;If you are using GitHub Pages, its not possible for you to get a SSL for your custom domain at present. So, GitLab might be a good choice if you need the &lt;code class=&quot;highlighter-rouge&quot;&gt;https&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;From now on, remember to replace &lt;code class=&quot;highlighter-rouge&quot;&gt;YOURDOMAIN.com&lt;/code&gt; with your custom domain and &lt;code class=&quot;highlighter-rouge&quot;&gt;YOURUSERNAME&lt;/code&gt; with, well, your username. ;)&lt;/p&gt; &lt;p&gt;Create a project named &lt;code class=&quot;highlighter-rouge&quot;&gt;YOURUSERNAME.gitlab.io&lt;/code&gt; so that GitLab will identify the project correctly. After that, upload your code to GitLab:&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;git remote add origin git@gitlab.com:YOURUSERNAME/YOURUSERNAME.gitlab.io.git &lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;git push -u origin master &lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;p&gt;OK, so far we have a project uploaded to GitLab, but we haven’t configured GitLab Pages yet. To configure it, just create a &lt;code class=&quot;highlighter-rouge&quot;&gt;.gitlab-ci.yml&lt;/code&gt; file in the root directory of your repository with the following contents:&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pages: stage: deploy image: ruby:2.3 script: - gem install jekyll - jekyll build -d public/ artifacts: paths: - public only: - master &lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;p&gt;This file instructs GitLab &lt;code class=&quot;highlighter-rouge&quot;&gt;Runner&lt;/code&gt; to deploy by installing Jekyll and building your website under the &lt;code class=&quot;highlighter-rouge&quot;&gt;public/&lt;/code&gt; folder (&lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll build -d public/&lt;/code&gt;). You can find a &lt;a href=&quot;https://flinhong.github.io/tips/automated-blog-with-gitlab-ci/&quot;&gt;previous post&lt;/a&gt; about the GitLab CI for your Jekyll site.&lt;/p&gt; &lt;p&gt;While you Wait for the build process to complete, you can track the progress in the Builds page of your project. Once it starts, it probably won’t take longer than a few minutes. Once the build is finished, your website will be available at &lt;code class=&quot;highlighter-rouge&quot;&gt;https://YOURUSERNAME.gitlab.io&lt;/code&gt;. Note that GitLab already provides TLS certificates to all subdomains of &lt;code class=&quot;highlighter-rouge&quot;&gt;gitlab.io&lt;/code&gt; (but it has some limitations, so please &lt;a href=&quot;http://doc.gitlab.com/ee/pages/README.html#limitations&quot;&gt;refer to the documentation for more&lt;/a&gt;). So if you don’t want to add a custom domain, you’re done.&lt;/p&gt; &lt;h2 id=&quot;headid-configuring-the-tls-certificate-of-your-custom-domain&quot;&gt;Configuring the TLS certificate of your custom domain&lt;/h2&gt; &lt;p&gt;Once you buy a domain name and point that domain to your GitLab Pages website, you need to configure 2 things:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;add the domain to GitLab Pages configuration (&lt;a href=&quot;http://doc.gitlab.com/ee/pages/README.html#add-a-custom-domain-to-your-pages-website&quot;&gt;see documentation&lt;/a&gt;);&lt;/li&gt; &lt;li&gt;add your custom certificate to your website.&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;Once you add your domain, your website will be available under both &lt;code class=&quot;highlighter-rouge&quot;&gt;http://YOURDOMAIN.com&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;https://YOURUSERNAME.gitlab.io&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;But if you try to access your custom domain with HTTPS (&lt;code class=&quot;highlighter-rouge&quot;&gt;https://YOURDOMAIN.com&lt;/code&gt; in this case), your browser will show that horrible page, saying that things are going wrong and someone is trying to steal your information. &lt;em&gt;Why is that?&lt;/em&gt;&lt;/p&gt; &lt;p&gt;Since GitLab offers TLS certificates to all &lt;code class=&quot;highlighter-rouge&quot;&gt;gitlab.io&lt;/code&gt; pages and your custom domain is just a CNAME over that same domain, GitLab serves the &lt;code class=&quot;highlighter-rouge&quot;&gt;gitlab.io&lt;/code&gt; certificate, and your browser receives mixed messages: on one side, the browser is trying to access &lt;code class=&quot;highlighter-rouge&quot;&gt;YOURDOMAIN.com&lt;/code&gt;, but on the other side it is getting a TLS certificate for &lt;code class=&quot;highlighter-rouge&quot;&gt;*.gitlab.io&lt;/code&gt;, signaling that something is wrong. That’s the same case for GitHub Pages, you can visit your site with https for &lt;code class=&quot;highlighter-rouge&quot;&gt;*.github.io&lt;/code&gt; but not for your custom domain.&lt;/p&gt; &lt;p&gt;In order to fix it, you need to obtain a certificate for &lt;code class=&quot;highlighter-rouge&quot;&gt;YOURDOMAIN.com&lt;/code&gt; and add it to GitLab Pages. For that we are going to use Let’s Encrypt.&lt;/p&gt; &lt;p&gt;Let’s Encrypt is a new certificate authority that offers both &lt;em&gt;free&lt;/em&gt; and &lt;em&gt;automated&lt;/em&gt; certificates. That’s perfect for us: we don’t have to pay for having HTTPS and you can do everything within the comfort of your terminal.&lt;/p&gt; &lt;p&gt;We begin with downloading the &lt;code class=&quot;highlighter-rouge&quot;&gt;letsencrypt-auto&lt;/code&gt; utility. Open a new terminal window and type:&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;git clone https://github.com/letsencrypt/letsencrypt &lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;letsencrypt &lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;letsencrypt-auto&lt;/code&gt; offers a lot of functionality. For example, if you have a web server running Apache, you could add &lt;code class=&quot;highlighter-rouge&quot;&gt;letsencrypt-auto --apache&lt;/code&gt; inside your webserver and have everything done for you. &lt;code class=&quot;highlighter-rouge&quot;&gt;letsencrypt&lt;/code&gt; targets primarily Unix-like webservers, so the &lt;code class=&quot;highlighter-rouge&quot;&gt;letsencrypt-auto&lt;/code&gt; tool won’t work for Windows users. Check &lt;a href=&quot;https://cultiv.nl/blog/lets-encrypt-on-windows/&quot;&gt;this tutorial&lt;/a&gt; to see how to get Let’s Encrypt certificates while running Windows. But I am not recommend you to use Windows for this process, I have tried but failed…&lt;/p&gt; &lt;p&gt;Since we are running on GitLab’s servers instead, we have to do a bit of manual work:&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;./letsencrypt-auto certonly -a manual -d YOURDOMAIN.com &lt;span class=&quot;c&quot;&gt;#&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# If you want to support another domain, www.YOURDOMAIN.com, for example, you&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# can add it to the domain list after -d like:&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# ./letsencrypt-auto certonly -a manual -d YOURDOMAIN.com -d www.YOURDOMAIN.com&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;p&gt;I only configured the www subdomain for my site. After you accept that your IP will be publicly logged, a message like the following will appear:&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Make sure your web server displays the following content at http://YOURDOMAIN.org/.well-known/acme-challenge/5TBu788fW0tQ5EOwZMdu1Gv3e9C33gxjV58hVtWTbDM before continuing: 5TBu788fW0tQ5EOwZMdu1Gv3e9C33gxjV58hVtWTbDM.ewlbSYgvIxVOqiP1lD2zeDKWBGEZMRfO_4kJyLRP_4U &lt;span class=&quot;c&quot;&gt;#&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# output omitted&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#&lt;/span&gt; Press ENTER to &lt;span class=&quot;k&quot;&gt;continue&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;p&gt;Now it is waiting for the server to be correctly configured so it can go on. &lt;strong&gt;Leave this terminal window open&lt;/strong&gt; for now.&lt;/p&gt; &lt;p&gt;So, the goal is to the make our already-published static website return said token when said URL is requested. That’s easy: create a custom page! Just create a file in your blog folder that looks like this:&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;--- layout: null permalink: /.well-known/acme-challenge/5TBu788fW0tQ5EOwZMdu1Gv3e9C33gxjV58hVtWTbDM.html --- 5TBu788fW0tQ5EOwZMdu1Gv3e9C33gxjV58hVtWTbDM.ewlbSYgvIxVOqiP1lD2zeDKWBGEZMRfO_4kJyLRP_4U &lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;p&gt;This tells Jekyll to create a static page, which you can see at &lt;code class=&quot;highlighter-rouge&quot;&gt;cool-blog/_site/.well-known/acme-challenge/5TBu788fW0tQ5EOwZMdu1Gv3e9C33gxjV58hVtWTbDM.html&lt;/code&gt;, with no extra HTML, just the token in plain text. As we are using the &lt;code class=&quot;highlighter-rouge&quot;&gt;permalink&lt;/code&gt; attribute in the front matter, you can name this file anyway you want and put it anywhere, too. Note that the behaviour of the &lt;code class=&quot;highlighter-rouge&quot;&gt;permalink&lt;/code&gt; attribute has &lt;a href=&quot;https://jekyllrb.com/docs/upgrading/2-to-3/#permalinks-no-longer-automatically-add-a-trailing-slash&quot;&gt;changed&lt;/a&gt; from Jekyll 2 to Jekyll 3, so make sure you have Jekyll 3.x installed. If you’re not using version 3 of Jekyll or if you’re using a different tool, just create the same file in the exact path, like &lt;code class=&quot;highlighter-rouge&quot;&gt;cool-blog/.well-known/acme-challenge/5TBu788fW0tQ5EOwZMdu1Gv3e9C33gxjV58hVtWTbDM.html&lt;/code&gt; or an equivalent path in your static site generator of choice. Here we’ll call it &lt;code class=&quot;highlighter-rouge&quot;&gt;letsencrypt-setup.html&lt;/code&gt; and place it in the root folder of the blog. In order to check that everything is working as expected, start a local server with jekyll serve in a separate terminal window and try to access the URL:&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;curl http://localhost:4000/.well-known/acme-challenge/5TBu788fW0tQ5EOwZMdu1Gv3e9C33gxjV58hVtWTbDM &lt;span class=&quot;c&quot;&gt;# response:&lt;/span&gt; 5TBu788fW0tQ5EOwZMdu1Gv3e9C33gxjV58hVtWTbDM.ewlbSYgvIxVOqiP1lD2zeDKWBGEZMRfO_4kJyLRP_4U &lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;p&gt;Note that I just replaced the &lt;code class=&quot;highlighter-rouge&quot;&gt;http://YOURDOMAIN.com&lt;/code&gt; (from the &lt;code class=&quot;highlighter-rouge&quot;&gt;letsencrypt-auto&lt;/code&gt; instructions) with &lt;code class=&quot;highlighter-rouge&quot;&gt;http://localhost:4000&lt;/code&gt;. Everything is working fine, so we just need to upload the new file to GitLab:&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;git add letsencrypt-setup.html &lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;git commit -m &lt;span class=&quot;s2&quot;&gt;&quot;add letsencypt-setup.html file&quot;&lt;/span&gt; &lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;git push &lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;p&gt;Just because the &lt;code class=&quot;highlighter-rouge&quot;&gt;permalink&lt;/code&gt; attribute, I cannot get the correct response from the url above, and get a &lt;code class=&quot;highlighter-rouge&quot;&gt;404&lt;/code&gt; response. The right response can only curl from the url with &lt;code class=&quot;highlighter-rouge&quot;&gt;.html&lt;/code&gt; ending.&lt;/p&gt; &lt;p&gt;For fixing this problem, you can add the following lines in your &lt;code class=&quot;highlighter-rouge&quot;&gt;.gitlab-ci.yml&lt;/code&gt; file after Jekyll build the site in the &lt;code class=&quot;highlighter-rouge&quot;&gt;public/&lt;/code&gt; folder:&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;- &lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;public - mkdir -p /.well-known/acme-challenge - &lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; .well-known - &lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;acme-challenge - &lt;span class=&quot;nb&quot;&gt;printf&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;%s&quot;&lt;/span&gt; 5TBu788fW0tQ5EOwZMdu1Gv3e9C33gxjV58hVtWTbDM.ewlbSYgvIxVOqiP1lD2zeDKWBGEZMRfO_4kJyLRP_4U &amp;gt; 5TBu788fW0tQ5EOwZMdu1Gv3e9C33gxjV58hVtWTbDM &lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;p&gt;Once the build finishes, test again if everything is working well:&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# Note that we&#39;re using the actual domain, not localhost anymore&lt;/span&gt; &lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;curl http://YOURDOMAIN.com/.well-known/acme-challenge/5TBu788fW0tQ5EOwZMdu1Gv3e9C33gxjV58hVtWTbDM &lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;p&gt;Now that everything is working as expected, go back to the terminal window that’s waiting for you and hit &lt;code class=&quot;highlighter-rouge&quot;&gt;ENTER&lt;/code&gt;. This instructs the Let’s Encrypt’s servers to go to the URL we just created. If they get the response they were waiting for, we’ve proven that we actually own the domain and now they’ll send you the TLS certificates. After a while it responds:&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;IMPORTANT NOTES: - Congratulations! Your certificate and chain have been saved at /etc/letsencrypt/live/YOURDOMAIN.org/fullchain.pem. Your cert will expire on 2016-07-04. To obtain a new version of the certificate &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;the future, simply run Let&lt;span class=&quot;s1&quot;&gt;&#39;s Encrypt again. - If you like Let&#39;&lt;/span&gt;s Encrypt, please consider supporting our work by: Donating to ISRG / Let&lt;span class=&quot;s1&quot;&gt;&#39;s Encrypt: https://letsencrypt.org/donate Donating to EFF: https://eff.org/donate-le &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;p&gt;Success! We have correctly acquired a free TLS certificate for our domain!&lt;/p&gt; &lt;p&gt;Note, however, that like any other TLS certificate, it has an expiration date, and in the case of certificates issued by Let’s Encrypt, the certificate will remain valid for &lt;strong&gt;90 days&lt;/strong&gt;. When you finish setting up, just put in your calendar to remember to renew the certificate in time, otherwise it will become invalid, and the browser will reject it.&lt;/p&gt; &lt;p&gt;Now we just need to upload the certificate and the key to GitLab. Go to &lt;strong&gt;Settings -&amp;gt; Pages&lt;/strong&gt; inside your project, remove the old CNAME and add a new one with the same domain, but now you’ll also upload the TLS certificate. Paste the contents of &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/letsencrypt/live/YOURDOMAIN.com/fullchain.pem&lt;/code&gt; (you’ll need sudo to read the file) to the “Certificate (PEM)” field and &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/letsencrypt/live/YOURDOMAIN.com/privkey.pem&lt;/code&gt; (also needs sudo) to the “Key (PEM)” field.&lt;/p&gt; &lt;p&gt;You can access your &lt;code class=&quot;highlighter-rouge&quot;&gt;.pem&lt;/code&gt; files by using &lt;code class=&quot;highlighter-rouge&quot;&gt;sudo su&lt;/code&gt; in Ubuntu with &lt;code class=&quot;highlighter-rouge&quot;&gt;Gedit&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/images/201607/gitlab-pages-cert-upload-screenshot.png&quot; alt=&quot;GitLab configure&quot; /&gt;&lt;/p&gt; &lt;p&gt;And you’re done! You now have a fully working HTTPS website:&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;curl -vX HEAD https://YOURDOMAIN.com/ &lt;span class=&quot;c&quot;&gt;#&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# starting connection&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; TLS 1.2 connection using TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; Server certificate: YOURDOMAIN.com &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; Server certificate: Lets Encrypt Authority X3 &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; Server certificate: DST Root CA X3 &lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;h2 id=&quot;headid-redirecting&quot;&gt;Redirecting&lt;/h2&gt; &lt;p&gt;Everything is working fine, but now we have an extra concern: we have two working versions of our website, both HTTP and HTTPS. We need a way to redirect all of our traffic to the HTTPS version, and tell search engines to do the same.&lt;/p&gt; &lt;h3 id=&quot;headid-search-engines&quot;&gt;Search Engines&lt;/h3&gt; &lt;p&gt;Instructing the search engines is really easy: just tell them that the HTTPS version is the “canonical” version, and they send all the users to it. And how do you do that? By adding a &lt;code class=&quot;highlighter-rouge&quot;&gt;link&lt;/code&gt; tag to the header of the HTML:&lt;/p&gt; &lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;canonical&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://YOURDOMAIN.com/specific/page&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;p&gt;Adding this to every header on a blog tells the search engine that the correct version is the HTTPS one, and they’ll comply.&lt;/p&gt; &lt;h3 id=&quot;headid-internal-links&quot;&gt;Internal links&lt;/h3&gt; &lt;p&gt;Remember to use HTTPS for your CSS or JavaScript file URLs, because when the browser accesses a secure website that relies on an insecure resource, it may block that resource.&lt;/p&gt; &lt;p&gt;It is &lt;a href=&quot;http://www.paulirish.com/2010/the-protocol-relative-url/&quot;&gt;considered a good practice&lt;/a&gt; to use the protocol-agnostic path:&lt;/p&gt; &lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;//YOURDOMAIN.com/styles.css&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;//YOURDOMAIN.com/script.js&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;h3 id=&quot;headid-javascript-based-redirect&quot;&gt;JavaScript-based redirect&lt;/h3&gt; &lt;p&gt;There is, however, a case where the user specifically types in the URL without using HTTPS, and they’ll access the HTTP version of your website.&lt;/p&gt; &lt;p&gt;The correct way of handling that would be to respond with a 301 “Moved permanently” HTTP code, and the browser would remember it for the next request. However, that’s not a possibility we have here, since we’re running on GitLab’s servers.&lt;/p&gt; &lt;p&gt;A small hack you can do is to redirect your users with a bit of JavaScript code:&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;host&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;YOURDOMAIN.com&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;host&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;host&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;protocol&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;https:&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;location&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/^http:/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;https:&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;p&gt;This redirects the user to the HTTPS version, but there are a few problems with it:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;a user could have JavaScript disabled, and would not be affected by that;&lt;/li&gt; &lt;li&gt;an attacker could simply remove that code and behave as a &lt;a href=&quot;https://en.wikipedia.org/wiki/Man-in-the-middle_attack&quot;&gt;Man in the Middle&lt;/a&gt;;&lt;/li&gt; &lt;li&gt;the browser won’t remember the redirect instruction, so every time the user types that same URL, the website will have to redirect him/her again.&lt;/li&gt; &lt;/ol&gt; &lt;h2 id=&quot;headid-wrap-up&quot;&gt;Wrap up&lt;/h2&gt; &lt;p&gt;&lt;img src=&quot;/images/201607/https.png&quot; alt=&quot;https&quot; /&gt;&lt;/p&gt; &lt;p&gt;That’s how easy it is to have a free HTTPS-enabled website. With these tools, I see no reason not to do it.&lt;/p&gt; &lt;p&gt;If you want to check the status of your HTTPS enabled website, &lt;a href=&quot;https://www.ssllabs.com/ssltest/&quot;&gt;SSL Labs offers a free online service&lt;/a&gt; that “performs a deep analysis of the configuration of any SSL web server on the public Internet”.&lt;/p&gt; &lt;p&gt;I hope it helps you :)&lt;/p&gt;</content><author><name>Frank Lin</name></author><category term="Front-end"/><category term="Jekyll"/><category term="GitLab"/><summary>In this post we will talk about HTTPS and how to add it to your GitLab Pages site with Let’s Encrypt. And you can find the original post at Tutorial: Securing your GitLab Pages with TLS and Let’s Encrypt. Here, I add my own exprience when following its guidance.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.flinhong.com/images/201607/lets-encrypt.png"/></entry><entry><title>Host Jekyll Site on Google Firebase with free SSL</title><link href="https://www.flinhong.com/tips/jekyll-with-firebase/" rel="alternate" type="text/html" title="Host Jekyll Site on Google Firebase with free SSL"/><published>2016-07-02T00:00:00+08:00</published><updated>2016-07-02T00:00:00+08:00</updated><id>https://www.flinhong.com/tips/jekyll-with-firebase</id><content type="html" xml:base="https://www.flinhong.com/tips/jekyll-with-firebase/">&lt;h2 id=&quot;headid-what-is-firebase-hosting&quot;&gt;What is Firebase Hosting?&lt;/h2&gt; &lt;p&gt;Firebase Hosting is a developer focused static web hosting provider that is super fast, secure and reliable. You can quickly and easily deploy your static websites to a global content-delivery network (CDN) with a single command.&lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt; &lt;p&gt;Key features of Firebase Hosting include:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;CDN-backed global content delivery&lt;/li&gt; &lt;li&gt;Free Automatic SSL certificate provisioning&lt;/li&gt; &lt;li&gt;Custom (and even naked) domain support&lt;/li&gt; &lt;li&gt;One-command deploys; one-click rollbacks.&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;headid-getting-started&quot;&gt;Getting Started&lt;/h2&gt; &lt;h3 id=&quot;headid-create-a-free-google-firebase-account&quot;&gt;Create a Free Google Firebase Account&lt;/h3&gt; &lt;p&gt;Sign in to the &lt;a href=&quot;https://firebase.google.com/&quot;&gt;Firebase Console&lt;/a&gt; and create a new project. You will be prompted to enter a ‘Project name’ and choose a ‘Country/region’.&lt;/p&gt; &lt;h3 id=&quot;headid-install-node-js&quot;&gt;Install Node js&lt;/h3&gt; &lt;p&gt;Firebase CLI work with node js packages (version 0.10.0 or greater), so you have to install node js in your system, so Just visit &lt;a href=&quot;https://nodejs.org/en/&quot;&gt;node js website&lt;/a&gt; and get your specific setup file and install it in your system. And don’t forgot to add environment path variable in your system, so you can easily use your favorite command line shell from everywhere.&lt;sup id=&quot;fnref:2&quot;&gt;&lt;a href=&quot;#fn:2&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt; &lt;h3 id=&quot;headid-install-firebase&quot;&gt;Install Firebase&lt;/h3&gt; &lt;p&gt;&lt;strong&gt;First Time Installation&lt;/strong&gt;:&lt;/p&gt; &lt;p&gt;Once you have Node.js and npm installed, you can install the Firebase command line tools via npm:&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;npm install -g firebase-tools &lt;span class=&quot;c&quot;&gt;# or use sudo (with caution) if required by your system permissions&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# sudo npm install -g firebase-tools&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;p&gt;This installs the globally available &lt;code class=&quot;highlighter-rouge&quot;&gt;firebase&lt;/code&gt; command.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Updating Previously Installed Firebase Tools&lt;/strong&gt;:&lt;/p&gt; &lt;p&gt;If you have a previously installed version of Firebase command line tools, you can easily update them to the latest version:&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;npm update -g firebase-tools &lt;span class=&quot;c&quot;&gt;# or use sudo (with caution) if required by your system permissions&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# sudo npm update -g firebase-tools&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;p&gt;Now this will install all necessary firebase packages.&lt;/p&gt; &lt;p&gt;If you see any error like an upgrade to v 4.0 in windows machine then just &lt;strong&gt;ignore it&lt;/strong&gt;. After a few minutes all the packages will be installed in your machine.&lt;/p&gt; &lt;p&gt;Now run this command to login:&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;firebase login &lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;p&gt;Now, your browser will automatically open and it asks to give some permission to Google, so just give it to them.&lt;/p&gt; &lt;p&gt;If you want to deploy your site with continuous integration system such as Travis, you can get your firebase token by:&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;firebase login:ci &lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;p&gt;Store the output token in a secure but accessible way in your CI system.&lt;/p&gt; &lt;h3 id=&quot;headid-setup-firebase-project&quot;&gt;Setup Firebase Project&lt;/h3&gt; &lt;p&gt;Just like we use &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll new&lt;/code&gt; to create a new jekyll website, here we do the same thing for Firebase. So choose your favorite location, and go to that directory with cd command.&lt;/p&gt; &lt;p&gt;Now run, this command:&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;firebase init &lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;p&gt;So just like Jekyll generate many of folder (layout, post, include, config etc) for us, firebase will also generate four things, like this.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/images/201607/firebase-init.png&quot; alt=&quot;firebase files&quot; /&gt;&lt;/p&gt; &lt;h3 id=&quot;headid-generate-your-jekyll-site&quot;&gt;Generate Your Jekyll Site&lt;/h3&gt; &lt;p&gt;Now come back to your Jekyll website, you can copy your jekyll files to your firebase project’s root directory and build your site to the &lt;code class=&quot;highlighter-rouge&quot;&gt;public&lt;/code&gt; folder:&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;jekyll build -d public &lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;h3 id=&quot;headid-check-your-local-site-with-firebase&quot;&gt;Check Your Local Site with Firebase&lt;/h3&gt; &lt;p&gt;We all know, we can easily see our jekyll website locally though &lt;code class=&quot;highlighter-rouge&quot;&gt;127.0.0.1:4000&lt;/code&gt;, similarly you can check that public folder with firebase command. Just run this command:&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;firebase serve &lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;p&gt;Now you can see, your site locally though &lt;code class=&quot;highlighter-rouge&quot;&gt;127.0.0.1:5000&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;localhost:5000&lt;/code&gt; from your browser.&lt;/p&gt; &lt;p&gt;It is really good to see how your site will be live before you deploy it. And don’t forgot to use &lt;code class=&quot;highlighter-rouge&quot;&gt;_draft&lt;/code&gt; folder, so jekyll don’t generate it those pages in the public folder.&lt;/p&gt; &lt;h3 id=&quot;headid-deploying-your-site&quot;&gt;Deploying Your Site&lt;/h3&gt; &lt;p&gt;To deploy your site, simply run the following command from your project directory:&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;firebase deploy &lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;p&gt;When they successfully deploy it, they will say visit this URL to see your site live. So just visit it, you will see your site is live with their sub domain like https://projectxyz.firebaseapp.com.&lt;/p&gt; &lt;h2 id=&quot;headid-adding-a-custom-domain&quot;&gt;Adding a Custom Domain&lt;/h2&gt; &lt;p&gt;Firebase Hosting will handle provisioning an SSL certificate for your domain and serving your content over a CDN.&lt;/p&gt; &lt;h3 id=&quot;headid-verification-of-domain-ownership&quot;&gt;Verification of Domain Ownership&lt;/h3&gt; &lt;p&gt;Before setting up your custom domain you’ll need to deploy your site to it’s own firebaseapp.com subdomain. This will give you access to the hosting admin panel, where you’ll be able to see a history of deploys and manage custom domains.&lt;/p&gt; &lt;p&gt;On the &lt;strong&gt;Hosting&lt;/strong&gt; tab of the Firebase app you’d like to associate with a custom domain, select the &lt;strong&gt;Connect Custom Domain&lt;/strong&gt; button.&lt;/p&gt; &lt;p&gt;You will need to update the DNS entries for your domain by adding two TXT entries. The entries are available on the Hosting tab once you start the process of adding a custom domain. Depending on your domain name server host, this verification step may be instant or it may take an hour or more.&lt;/p&gt; &lt;h3 id=&quot;headid-provisioning-an-ssl-certificate&quot;&gt;Provisioning an SSL Certificate&lt;/h3&gt; &lt;p&gt;Once domain ownership is verified, it will provision an SSL certficate for your domain and deploy it across Google’s global CDN. By checking its IP address, it might be the Fastly CDN like GitHub Pages.&lt;/p&gt; &lt;h3 id=&quot;headid-activate-your-domain&quot;&gt;Activate Your Domain&lt;/h3&gt; &lt;p&gt;The final step will involve modifying the DNS for your domain to point to Firebase’s service. They already write well description about what to do, so just read it.&lt;/p&gt; &lt;h2 id=&quot;headid-deploy-with-travis-ci&quot;&gt;Deploy with Travis CI&lt;/h2&gt; &lt;p&gt;In Travis, you can also install the Firebase CLI and deploy your site automaticly by pull your GitHub repo. For the deploy step, you can access your firebase project by your Firebase Token that stated above.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;firebase deploy --token &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;FIREBASE_TOKEN&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;p&gt;Refs:&lt;/p&gt; &lt;div class=&quot;footnotes&quot;&gt; &lt;ol&gt; &lt;li id=&quot;fn:1&quot;&gt; &lt;p&gt;&lt;a href=&quot;https://desiredpersona.com/google-firebase-hosting-jekyll/&quot;&gt;Host Jekyll on Google Firebase Hosting&lt;/a&gt; &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li id=&quot;fn:2&quot;&gt; &lt;p&gt;&lt;a href=&quot;https://www.goyllo.com/jekyll/deploy/google-firebase/&quot;&gt;Host Jekyll Website To Google Firebase For Free&lt;/a&gt; &lt;a href=&quot;#fnref:2&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;/ol&gt; &lt;/div&gt;</content><author><name>Frank Lin</name></author><category term="Tips"/><category term="Jekyll"/><category term="Google"/><summary>What is Firebase Hosting?</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.flinhong.com/images/201607/firebase.png"/></entry><entry><title>Install Jekyll on Windows</title><link href="https://www.flinhong.com/tips/install-jekyll-on-windows/" rel="alternate" type="text/html" title="Install Jekyll on Windows"/><published>2016-06-25T00:00:00+08:00</published><updated>2016-06-25T00:00:00+08:00</updated><id>https://www.flinhong.com/tips/install-jekyll-on-windows</id><content type="html" xml:base="https://www.flinhong.com/tips/install-jekyll-on-windows/">&lt;p&gt;In this installation guide we’ll be using Windows 10. These instructions should work for older versions of Windows but they have not but tested.&lt;/p&gt; &lt;h2 id=&quot;headid-install-chocolatey&quot;&gt;Install Chocolatey&lt;/h2&gt; &lt;p&gt;Open Command Prompt which can be found in &lt;code class=&quot;highlighter-rouge&quot;&gt;All Apps -&amp;gt; Windows System -&amp;gt; Command Prompt&lt;/code&gt;. Right click on the icon, select “More” then “Run as administrator”.&lt;/p&gt; &lt;p&gt;Next we’ll install &lt;a href=&quot;https://chocolatey.org/&quot;&gt;Chocolatey&lt;/a&gt; which is a package manager for Windows.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;@powershell -NoProfile -ExecutionPolicy Bypass -Command &lt;span class=&quot;s2&quot;&gt;&quot;iex ((new-object net.webclient).DownloadString(&#39;https://chocolatey.org/install.ps1&#39;))&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; SET &lt;span class=&quot;nv&quot;&gt;PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;%PATH%;%ALLUSERSPROFILE%&lt;span class=&quot;se&quot;&gt;\c&lt;/span&gt;hocolatey&lt;span class=&quot;se&quot;&gt;\b&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;p&gt;Close Command Prompt and open it again to make Chocolatey available, remember to run it as administrator.&lt;/p&gt; &lt;h2 id=&quot;headid-install-ruby-by-chocolatey&quot;&gt;Install Ruby by Chocolatey&lt;/h2&gt; &lt;p&gt;Then we’ll install ruby.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;choco install ruby -y &lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;p&gt;Close Command Prompt and open it once again to make Ruby available, remember to run it as administrator.&lt;/p&gt; &lt;h2 id=&quot;headid-install-jekyll-using-gem&quot;&gt;Install Jekyll using Gem&lt;/h2&gt; &lt;p&gt;And now we can install Jekyll.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;gem install jekyll &lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;p&gt;We can test Jekyll is working by checking the version installed.&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;jekyll -v &lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;p&gt;You can visit &lt;a href=&quot;http://jekyll-windows.juthilo.com/&quot;&gt;Run Jekyll on Windows&lt;/a&gt; for more information.&lt;/p&gt;</content><author><name>Frank Lin</name></author><category term="Tips"/><category term="Jekyll"/><summary>In this installation guide we’ll be using Windows 10. These instructions should work for older versions of Windows but they have not but tested.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.flinhong.com/images/201606/jekyll.jpg"/></entry><entry><title>简单学学 Liquid 在 Jekyll 中的使用</title><link href="https://www.flinhong.com/front-end/liquid-notes/" rel="alternate" type="text/html" title="简单学学 Liquid 在 Jekyll 中的使用"/><published>2016-06-20T00:00:00+08:00</published><updated>2016-06-20T00:00:00+08:00</updated><id>https://www.flinhong.com/front-end/liquid-notes</id><content type="html" xml:base="https://www.flinhong.com/front-end/liquid-notes/">&lt;h2 id=&quot;headid-liquid-&quot;&gt;Liquid 基础&lt;/h2&gt; &lt;p&gt;Liquid 是个简单有效的模板工具，而 Jekyll 处理页面时常使用 Liquid 调用变量或是进行一些循环操作，使得我们的 Jekyll 模板更具逻辑性和易用性。&lt;/p&gt; &lt;p&gt;Liquid 中有两种 tag：&lt;/p&gt; &lt;ul&gt; &lt;li&gt;使用两个花括号调用变量，例如：&lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;varibale&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/li&gt; &lt;li&gt;使用花括号和百分号进行逻辑操作，例如：&lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;statement&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&quot;headid-section&quot;&gt;变量&lt;/h3&gt; &lt;p&gt;以下是一个简单的页面（本文中的所有例子均来自 &lt;a href=&quot;http://jekyll.tips/&quot;&gt;Jekyll Tips&lt;/a&gt;），通过 Liquid 调取 &lt;code class=&quot;highlighter-rouge&quot;&gt;front matter&lt;/code&gt; 中的变量 &lt;code class=&quot;highlighter-rouge&quot;&gt;heading&lt;/code&gt;：&lt;/p&gt; &lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;--- heading: I like cupcakes --- &lt;span class=&quot;cp&quot;&gt;&amp;lt;!doctype html&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;html&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;lang=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;en&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;charset=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;utf-8&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&amp;lt;/title&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;{{ page.heading }}&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;p&gt;同时我们可以在变量后添加 “filter” 条件来改变所调用变量的输出，例如把上面的 &lt;code class=&quot;highlighter-rouge&quot;&gt;heading&lt;/code&gt; 大写：&lt;/p&gt; &lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;... &lt;span class=&quot;nt&quot;&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;{{ page.heading | upcase }}&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt; ... &lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;p&gt;当然，还能使用多个 &lt;code class=&quot;highlighter-rouge&quot;&gt;filter&lt;/code&gt;，例如截取 &lt;code class=&quot;highlighter-rouge&quot;&gt;heading&lt;/code&gt; 中的字符：&lt;/p&gt; &lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;... &lt;span class=&quot;nt&quot;&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;{{ page.heading | upcase | truncate: 8 }}&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt; ... &lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;h3 id=&quot;headid-section-1&quot;&gt;逻辑操作&lt;/h3&gt; &lt;p&gt;如下例，可以通过条件语句调整输出结果，只有当 &lt;code class=&quot;highlighter-rouge&quot;&gt;show_heading&lt;/code&gt; 为 &lt;code class=&quot;highlighter-rouge&quot;&gt;true&lt;/code&gt; 时才显示 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;h1&amp;gt;&lt;/code&gt;：&lt;/p&gt; &lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;--- heading: I like cupcakes show_heading: true --- ... {% if page.show_heading %} &lt;span class=&quot;nt&quot;&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;{{ page.heading | upcase | truncate: 8 }}&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt; {% endif %} ... &lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;p&gt;下例增加了 &lt;code class=&quot;highlighter-rouge&quot;&gt;elsif&lt;/code&gt; 语句进行多个条件的判断，当 &lt;code class=&quot;highlighter-rouge&quot;&gt;show_heading&lt;/code&gt; 不为真时，判断 &lt;code class=&quot;highlighter-rouge&quot;&gt;heading&lt;/code&gt; 中是否包含 “cupcake”：&lt;/p&gt; &lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;--- heading: I like cupcakes show_heading: false --- ... {% if page.show_heading %} &lt;span class=&quot;nt&quot;&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;{{ page.heading | upcase | truncate: 8 }}&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt; {% elsif page.heading contains &quot;cupcake&quot; %} &lt;span class=&quot;nt&quot;&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;I want cupcakes&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt; {% else %} &lt;span class=&quot;nt&quot;&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;I don&#39;t want cupcakes&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt; {% endif %} ... &lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;p&gt;除了 &lt;code class=&quot;highlighter-rouge&quot;&gt;if&lt;/code&gt; 外，Liquid 中的 &lt;code class=&quot;highlighter-rouge&quot;&gt;for&lt;/code&gt; 循环也很简单：&lt;/p&gt; &lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;--- heading: I like cupcakes show_heading: false cupcakes: - chocolate - lemon - strawberry --- ... &lt;span class=&quot;nt&quot;&gt;&amp;lt;ul&amp;gt;&lt;/span&gt; {% for cupcake in page.cupcakes %} &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&amp;gt;&lt;/span&gt;{{ cupcake }}&lt;span class=&quot;nt&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt; {% endfor %} &lt;span class=&quot;nt&quot;&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt; ... &lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;p&gt;上面，将 &lt;code class=&quot;highlighter-rouge&quot;&gt;front matter&lt;/code&gt; 中定义的 “cupcakes” 循环输出到列表中。另外 &lt;code class=&quot;highlighter-rouge&quot;&gt;case&lt;/code&gt; 也是支持的：&lt;/p&gt; &lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;p&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;rating&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt; {% case cupcake.rating %} {% when 1 %} &lt;span class=&quot;nt&quot;&gt;&amp;lt;img&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/images/rating/sick.png&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt; {% when 2 %} &lt;span class=&quot;nt&quot;&gt;&amp;lt;img&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/images/rating/unhappy.png&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt; {% when 3 %} &lt;span class=&quot;nt&quot;&gt;&amp;lt;img&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/images/rating/ok.png&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt; {% when 4 %} &lt;span class=&quot;nt&quot;&gt;&amp;lt;img&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/images/rating/happy.png&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt; {% when 5 %} &lt;span class=&quot;nt&quot;&gt;&amp;lt;img&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/images/rating/super_happy.png&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt; {% endcase %} &lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;h2 id=&quot;headid-liquid--filter&quot;&gt;Liquid 中的 filter&lt;/h2&gt; &lt;p&gt;下表是 Liquid 中常用的 &lt;code class=&quot;highlighter-rouge&quot;&gt;filter&lt;/code&gt;，你也可以访问 &lt;a href=&quot;http://cheat.jekyll.tips/&quot;&gt;Jekyll Cheat Sheet&lt;/a&gt; 查看所有可用的 &lt;code class=&quot;highlighter-rouge&quot;&gt;filter&lt;/code&gt; 及样例。&lt;/p&gt; &lt;hr /&gt; &lt;table&gt; &lt;thead&gt; &lt;tr&gt; &lt;th style=&quot;text-align: left&quot;&gt;&lt;strong&gt;filter&lt;/strong&gt;&lt;/th&gt; &lt;th style=&quot;text-align: left&quot;&gt;&lt;strong&gt;输出&lt;/strong&gt;&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;cupcake&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;prepend&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;chocolate &quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/td&gt; &lt;td style=&quot;text-align: left&quot;&gt;chocolate cupcake&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;lemon&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot; cake&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/td&gt; &lt;td style=&quot;text-align: left&quot;&gt;lemon cake&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;i like cupcakes&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;capitalize&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;}}&lt;/span&gt;&lt;/code&gt;&lt;/td&gt; &lt;td style=&quot;text-align: left&quot;&gt;I like cupcakes&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;BakeryStore&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;downcase&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;}}&lt;/span&gt;&lt;/code&gt;&lt;/td&gt; &lt;td style=&quot;text-align: left&quot;&gt;bakerystore&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;apple pie&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;upcase&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;}}&lt;/span&gt;&lt;/code&gt;&lt;/td&gt; &lt;td style=&quot;text-align: left&quot;&gt;APPLE PIE&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;muffin&amp;amp;cupcake?&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;cgi_escape&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;}}&lt;/span&gt;&lt;/code&gt;&lt;/td&gt; &lt;td style=&quot;text-align: left&quot;&gt;muffin%26cupcake%3F&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;&amp;lt;h1&amp;gt;Banana Split&amp;lt;/h1&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;escape&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;}}&lt;/span&gt;&lt;/code&gt;&lt;/td&gt; &lt;td style=&quot;text-align: left&quot;&gt;&amp;lt;h1&amp;gt;Banana Split&amp;lt;/h1&amp;gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;blueberry muffin.html&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;slugify&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;}}&lt;/span&gt;&lt;/code&gt;&lt;/td&gt; &lt;td style=&quot;text-align: left&quot;&gt;blueberry-muffin-html&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;&amp;lt;h1&amp;gt;Greentea cheesecake&amp;lt;/h1&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;strip_html&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;}}&lt;/span&gt;&lt;/code&gt;&lt;/td&gt; &lt;td style=&quot;text-align: left&quot;&gt;Greentea cheesecake&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;**Sour dough** bread&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;markdownify&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;}}&lt;/span&gt;&lt;/code&gt;&lt;/td&gt; &lt;td style=&quot;text-align: left&quot;&gt;Sour dough bread&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;I really really like cupcakes&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;remove_first&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&#39;really&#39;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/td&gt; &lt;td style=&quot;text-align: left&quot;&gt;I really like cupcakes&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;I really really like cupcakes&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;remove&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&#39;really&#39;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/td&gt; &lt;td style=&quot;text-align: left&quot;&gt;I like cupcakes&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;I really really like cupcakes&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;replace_first&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;really&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;truly&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;}}&lt;/span&gt;&lt;/code&gt;&lt;/td&gt; &lt;td style=&quot;text-align: left&quot;&gt;I truly really like cupcakes&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;I really really like cupcakes&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;really&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;truly&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;}}&lt;/span&gt;&lt;/code&gt;&lt;/td&gt; &lt;td style=&quot;text-align: left&quot;&gt;I truly truly like cupcakes&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;Carrot cake&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;}}&lt;/span&gt;&lt;/code&gt;&lt;/td&gt; &lt;td style=&quot;text-align: left&quot;&gt;11&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;Peanut butter cheesecake&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;number_of_words&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;}}&lt;/span&gt;&lt;/code&gt;&lt;/td&gt; &lt;td style=&quot;text-align: left&quot;&gt;3&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;Souffle&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;slice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/td&gt; &lt;td style=&quot;text-align: left&quot;&gt;S&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;Souffle&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;slice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/td&gt; &lt;td style=&quot;text-align: left&quot;&gt;o&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;Souffle&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;slice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;-2&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/td&gt; &lt;td style=&quot;text-align: left&quot;&gt;l&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;Souffle&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;slice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;}}&lt;/span&gt;&lt;/code&gt;&lt;/td&gt; &lt;td style=&quot;text-align: left&quot;&gt;uffl&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;apple,banana,carrot&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;,&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;jsonify&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/td&gt; &lt;td style=&quot;text-align: left&quot;&gt;[“apple”,”banana”,”carrot”]&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;The freshest bread in San Francisco&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;truncate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/td&gt; &lt;td style=&quot;text-align: left&quot;&gt;The freshest…&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;Who ate all the cupcakes?&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;truncatewords&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/td&gt; &lt;td style=&quot;text-align: left&quot;&gt;Who ate all…&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;hr /&gt; &lt;h2 id=&quot;headid-liquid--1&quot;&gt;Liquid 中的循环&lt;/h2&gt; &lt;p&gt;除了基础的 &lt;code class=&quot;highlighter-rouge&quot;&gt;for&lt;/code&gt; 循环，Liquid 还有一些进阶的循环可以使用。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/images/201606/style-cycle.png&quot; alt=&quot;images with different filter&quot; /&gt;&lt;/p&gt; &lt;p&gt;上面这个网页中，不同图片使用了不同的 &lt;code class=&quot;highlighter-rouge&quot;&gt;filter&lt;/code&gt; 样式，我们可以结合 Liquid 中的 &lt;code class=&quot;highlighter-rouge&quot;&gt;cycle&lt;/code&gt; 和 &lt;code class=&quot;highlighter-rouge&quot;&gt;for&lt;/code&gt; 循环实现：&lt;/p&gt; &lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;--- layout: page title: Muffins --- &lt;span class=&quot;nt&quot;&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;Our cupcakes&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;cupcakes&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt; {% for cupcake in site.cupcakes %} &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;cupcake&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;image&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;img&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;{{ cupcake.image_path }}&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;alt=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;{{ cupcake.type }}&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;style=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;-webkit-filter: {% cycle &quot;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;grayscale&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&quot;,&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;sepia&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&quot;,&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;invert&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;%}(&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;%)&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;h2&amp;gt;&lt;/span&gt;{{ cupcake.type }}&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;{{ cupcake.description }}&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt; {% endfor %} &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;p&gt;通过 &lt;code class=&quot;highlighter-rouge&quot;&gt;forloop.index&lt;/code&gt; 还能获得当前循环的次数：&lt;/p&gt; &lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;... &lt;span class=&quot;nt&quot;&gt;&amp;lt;h2&amp;gt;&lt;/span&gt;{{ forloop.index }}. {{ cupcake.type }}&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt; ... &lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;p&gt;&lt;img src=&quot;/images/201606/forloop-index.png&quot; alt=&quot;Forloop Index&quot; /&gt;&lt;/p&gt; &lt;p&gt;如果要从 “0” 还是计数，可以改为：&lt;/p&gt; &lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;... &lt;span class=&quot;nt&quot;&gt;&amp;lt;h2&amp;gt;&lt;/span&gt;{{ forloop.index0 }}. {{ cupcake.type }}&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt; ... &lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;p&gt;另外，可以使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;reversed&lt;/code&gt; 使 &lt;code class=&quot;highlighter-rouge&quot;&gt;for&lt;/code&gt; 循环逆向进行：&lt;/p&gt; &lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;... {% for cupcake in site.cupcakes reversed %} ... &lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;p&gt;要限制 &lt;code class=&quot;highlighter-rouge&quot;&gt;for&lt;/code&gt; 循环的输出个数可以使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;limit&lt;/code&gt;，而要跳过前 &lt;code class=&quot;highlighter-rouge&quot;&gt;x&lt;/code&gt; 个输出可以使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;offset&lt;/code&gt;：&lt;/p&gt; &lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;... {% for cupcake in site.cupcakes reversed limit: 3 offset: 3 %} ... &lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;p&gt;一个简单的 Jekyll 博客不需要太多复杂的东西，到这里就差不多了。要学习更多关于 Liquid 的内容，请参考 &lt;a href=&quot;https://shopify.github.io/liquid/&quot;&gt;Liquid Docs&lt;/a&gt;。&lt;/p&gt;</content><author><name>Frank Lin</name></author><category term="Front-end"/><category term="Jekyll"/><category term="Liquid"/><summary>Liquid 基础</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.flinhong.com/images/201606/liquid.jpg"/></entry></feed>